# shellcheck shell=bash
[[ $- != *i* ]] && return

. "$HOME/.config/xdg-compliance"

umask 077

shopt -s histappend
HISTSIZE=100000
HISTFILESIZE=100000
HISTCONTROL=ignoreboth
HISTTIMEFORMAT='%FT%T%z '

catWal() {
    if [[ -r "$XDG_CACHE_HOME/wal/sequences" ]]; then
        cat "$XDG_CACHE_HOME/wal/sequences"
    fi
}

PROMPT_COMMAND="history -a; history -c; history -r; catWal"

eval "$(oh-my-posh init bash --config "$HOME/.config/oh-my-posh/theme.omp.json")"

path() {
    tr ':' '\n' <<< "$PATH"
}

prependPath() {
    [[ ":$PATH:" != *":$1:"* ]] && PATH="$1:$PATH"
}

prependPath "$HOME/.local/bin"
prependPath "$HOME/bin"
prependPath "$HOME/.dotnet/tools"

export EDITOR=nvim
export VISUAL=nvim
export DOTNET_CLI_TELEMETRY_OPTOUT=1
export DOTNET_NEW_PREFERRED_LANG='F#'
export DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER=1
export MSSQL_CLI_TELEMETRY_OPTOUT=True
export LESS=FRSMi
export SYSTEMD_LESS="$LESS"
export DELTA_PAGER="less -$LESS"
export _JAVA_AWT_WM_NONREPARENTING=1
export GSETTINGS_BACKEND=keyfile

alias ls='ls -v --group-directories-first --classify --color=auto'
alias la='ls --almost-all'
alias ll='ls -lh --almost-all'
alias grep='grep --ignore-case --color=auto --exclude-dir=.git --binary-files=without-match'
alias pgrep='pgrep -fa'
alias df='df -hT'
alias du='du -h'
alias suspend='systemctl suspend'
alias qmv='qmv --format destination-only'
alias weather='curl http://wttr.in/'
alias journalctl='journalctl --no-hostname'
alias R='R --no-save'
alias nyan='curl https://poptart.spinda.net'

launch() {
    "$@" &>/dev/null & disown
}
complete -A command launch

dict() {
    command dict "$@" | less
}

mkdir -p "$XDG_DATA_HOME/bash"
export HISTFILE="$XDG_DATA_HOME/bash/history"

export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"
mkdir -p "$XDG_CACHE_HOME/less"

export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"

export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"

export ICEAUTHORITY="$XDG_CACHE_HOME/ICEauthority"

export GNUPGHOME="$XDG_DATA_HOME/gnupg"

export WAKATIME_HOME="$XDG_CONFIG_HOME/wakatime"

export DOTNET_PACKAGES="$XDG_CACHE_HOME/nuget/packages"

export NUGET_PACKAGES="$XDG_CACHE_HOME/nuget/packages"

export R_LIBS_USER="$XDG_CACHE_HOME/R"
export R_HISTFILE="$XDG_DATA_HOME/R/history"
export R_PROFILE_USER="$XDG_CONFIG_HOME/R/Rprofile"

export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
export NVM_DIR="$XDG_DATA_HOME/nvm"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"

export OCTAVE_HISTFILE="$XDG_DATA_HOME/octave/history"
export OCTAVE_SITE_INITFILE="$XDG_CONFIG_HOME/octave/octaverc"

export IPYTHONDIR="$XDG_CONFIG_HOME/jupyter"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"

export WGETRC="$XDG_CONFIG_HOME/wgetrc"
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'

export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"

export _JAVA_OPTIONS="-Djava.util.prefs.userRoot=$XDG_CONFIG_HOME/java"

export WINEPREFIX="$XDG_DATA_HOME/wine"

export ASPELL_CONF="per-conf $XDG_CONFIG_HOME/aspell/aspell.conf; personal $XDG_DATA_HOME/aspell/en.pws; repl $XDG_DATA_HOME/aspell/en.prepl"

export VAGRANT_HOME="$XDG_DATA_HOME/vagrant"
export VAGRANT_ALIAS_FILE="$XDG_DATA_HOME/vagrant/aliases"

export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME="$XDG_DATA_HOME/cargo"

export SQLITE_HISTORY="$XDG_DATA_HOME/sqlite_history"

export AZURE_CONFIG_DIR="$XDG_DATA_HOME/azure"

export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials"
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"

export PARALLEL_HOME="$XDG_CONFIG_HOME/parallel"

export GTK_IM_MODULE=fcitx5
export XMODIFIERS=@im=fcitx5
export QT_IM_MODULE=fcitx5

export QT_QPA_PLATFORMTHEME=qt5ct

export TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling

export ANSIBLE_NOCOWS=1

if hash ranger 2>/dev/null; then
    if [[ -r "$XDG_CONFIG_HOME/ranger/plugins/bash_automatic_cd.sh" ]]; then
        . "$XDG_CONFIG_HOME/ranger/plugins/bash_automatic_cd.sh"
    fi
fi

alias ssh-copy-id='ssh-copy-id -i "$XDG_CONFIG_HOME/ssh/id_rsa.pub"'

export GDK_SCALE=2
export QT_AUTO_SCREEN_SCALE_FACTOR=1
export AVALONIA_SCREEN_SCALE_FACTORS=eDP1=2

# Make fzf include dotfiles
export FZF_DEFAULT_COMMAND='fd -H --type f'
export FZF_DEFAULT_OPTS='--reverse'

if hash dotnet-suggest 2>/dev/null && [[ -r "$XDG_CONFIG_HOME/bash/dotnet-suggest-shim" ]]; then
    . "$XDG_CONFIG_HOME/bash/dotnet-suggest-shim"
fi

if [[ -r "$XDG_CONFIG_HOME/bash/dotnet-complete-shim" ]]; then
    . "$XDG_CONFIG_HOME/bash/dotnet-complete-shim"
fi
