[[ $- != *i* ]] && return

. "$HOME/.config/xdg-compliance"

umask 077

shopt -s histappend
HISTSIZE=10000
HISTFILESIZE=10000
HISTCONTROL=ignoreboth
PROMPT_COMMAND='history -a'

path() {
    tr ':' '\n' <<< "$PATH"
}

prependPath() {
    [[ ":$PATH:" != *":$1:"* ]] && PATH="$1:$PATH"
}

prependPath "$HOME/.local/bin"
prependPath "$HOME/bin"
prependPath "$HOME/.dotnet/tools"

if [[ -r "/usr/share/pureline/pureline" ]] && [[ "$TERM" != "linux" ]]; then
    . /usr/share/pureline/pureline
    . "$XDG_CONFIG_HOME/pureline/pureline.conf"
fi

export EDITOR=nvim
export VISUAL=nvim
export DOTNET_CLI_TELEMETRY_OPTOUT=1
export LESS=FRSMi
export SYSTEMD_LESS="$LESS"
export _JAVA_AWT_WM_NONREPARENTING=1
export RIDER_JDK=/usr/lib/jvm/java-11-openjdk
export GSETTINGS_BACKEND=keyfile

alias ls='ls -v --group-directories-first --classify --color=auto'
alias la='ls --almost-all'
alias ll='ls -lh --almost-all'
alias grep='grep --ignore-case --color=auto --exclude-dir=.git --binary-files=without-match'
alias pgrep='pgrep -fl'
alias df='df -hT'
alias du='du -h'
alias suspend='systemctl suspend'
alias qmv='qmv --format destination-only'
alias weather='curl http://wttr.in/'
alias journalctl='journalctl --no-hostname'

launch() {
    "$@" &>/dev/null & disown
}
complete -A command launch

schedule() {
    systemd-run --user --timer-property 'AccuracySec=1' --on-active "$1" "${@:2}"
}

alarm() {
    schedule "$1" notify-send --urgency critical "$2"
}

dict() {
    command dict "$@" | less
}

export HISTFILE="$XDG_DATA_HOME/bash/history"

export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"

export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"

export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"

export ICEAUTHORITY="$XDG_CACHE_HOME/ICEauthority"

export GNUPGHOME="$XDG_DATA_HOME/gnupg"

#alias code='code --extensions-dir "$XDG_DATA_HOME/vscode/extensions"'

export WAKATIME_HOME="$XDG_CONFIG_HOME/wakatime"

export DOTNET_PACKAGES="$XDG_CACHE_HOME/nuget/packages"

export NUGET_PACKAGES="$XDG_CACHE_HOME/nuget/packages"

export R_LIBS_USER="$XDG_CACHE_HOME/R"
export R_HISTFILE="$XDG_DATA_HOME/R/history"
export R_PROFILE_USER="$XDG_CONFIG_HOME/R/Rprofile"

export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
export NVM_DIR="$XDG_DATA_HOME/nvm"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"

export OCTAVE_HISTFILE="$XDG_DATA_HOME/octave/history"
export OCTAVE_SITE_INITFILE="$XDG_CONFIG_HOME/octave/octaverc"

export IPYTHONDIR="$XDG_CONFIG_HOME/jupyter"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"

export WGETRC="$XDG_CONFIG_HOME/wgetrc"
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'

export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"

export _JAVA_OPTIONS="-Djava.util.prefs.userRoot=$XDG_CONFIG_HOME/java"

export WINEPREFIX="$XDG_DATA_HOME/wine"

export ASPELL_CONF="per-conf $XDG_CONFIG_HOME/aspell/aspell.conf; personal $XDG_DATA_HOME/aspell/en.pws; repl $XDG_DATA_HOME/aspell/en.prepl"

if hash ranger 2>/dev/null; then
    if [[ -r "$XDG_CONFIG_HOME/ranger/plugins/bash_automatic_cd.sh" ]]; then
        . "$XDG_CONFIG_HOME/ranger/plugins/bash_automatic_cd.sh"
    fi
fi

alias ssh-copy-id='ssh-copy-id -i "$XDG_CONFIG_HOME/ssh/id_rsa.pub"'
